/*
 * Cosmo Tech Plaform API
 *
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Com.Cosmotech.Api;
using Com.Cosmotech.Model;
using Com.Cosmotech.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Com.Cosmotech.Test.Model
{
    /// <summary>
    ///  Class for testing PlatformServices
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PlatformServicesTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PlatformServices
        //private PlatformServices instance;

        public PlatformServicesTests()
        {
            // TODO uncomment below to create an instance of PlatformServices
            //instance = new PlatformServices();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PlatformServices
        /// </summary>
        [Fact]
        public void PlatformServicesInstanceTest()
        {
            // TODO uncomment below to test "IsType" PlatformServices
            //Assert.IsType<PlatformServices>(instance);
        }


        /// <summary>
        /// Test the property 'Provider'
        /// </summary>
        [Fact]
        public void ProviderTest()
        {
            // TODO unit test for the property 'Provider'
        }
        /// <summary>
        /// Test the property 'Credentials'
        /// </summary>
        [Fact]
        public void CredentialsTest()
        {
            // TODO unit test for the property 'Credentials'
        }
        /// <summary>
        /// Test the property 'Storage'
        /// </summary>
        [Fact]
        public void StorageTest()
        {
            // TODO unit test for the property 'Storage'
        }
        /// <summary>
        /// Test the property 'CoreContainerRegistry'
        /// </summary>
        [Fact]
        public void CoreContainerRegistryTest()
        {
            // TODO unit test for the property 'CoreContainerRegistry'
        }
        /// <summary>
        /// Test the property 'SimulatorsContainerRegistry'
        /// </summary>
        [Fact]
        public void SimulatorsContainerRegistryTest()
        {
            // TODO unit test for the property 'SimulatorsContainerRegistry'
        }
        /// <summary>
        /// Test the property 'EventBusCluster'
        /// </summary>
        [Fact]
        public void EventBusClusterTest()
        {
            // TODO unit test for the property 'EventBusCluster'
        }
        /// <summary>
        /// Test the property 'DataWarehouseCluster'
        /// </summary>
        [Fact]
        public void DataWarehouseClusterTest()
        {
            // TODO unit test for the property 'DataWarehouseCluster'
        }
        /// <summary>
        /// Test the property 'DatabaseCluster'
        /// </summary>
        [Fact]
        public void DatabaseClusterTest()
        {
            // TODO unit test for the property 'DatabaseCluster'
        }
        /// <summary>
        /// Test the property 'KeyVault'
        /// </summary>
        [Fact]
        public void KeyVaultTest()
        {
            // TODO unit test for the property 'KeyVault'
        }
        /// <summary>
        /// Test the property 'KubernetesCluster'
        /// </summary>
        [Fact]
        public void KubernetesClusterTest()
        {
            // TODO unit test for the property 'KubernetesCluster'
        }
        /// <summary>
        /// Test the property 'Directory'
        /// </summary>
        [Fact]
        public void DirectoryTest()
        {
            // TODO unit test for the property 'Directory'
        }
        /// <summary>
        /// Test the property 'Monitoring'
        /// </summary>
        [Fact]
        public void MonitoringTest()
        {
            // TODO unit test for the property 'Monitoring'
        }
        /// <summary>
        /// Test the property 'Analytic'
        /// </summary>
        [Fact]
        public void AnalyticTest()
        {
            // TODO unit test for the property 'Analytic'
        }

    }

}
