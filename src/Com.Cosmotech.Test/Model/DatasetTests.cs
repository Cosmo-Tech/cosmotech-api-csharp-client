/*
 * Cosmo Tech Platform API
 *
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 3.0.8-dev
 * Contact: platform@cosmotech.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Com.Cosmotech.Api;
using Com.Cosmotech.Model;
using Com.Cosmotech.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Com.Cosmotech.Test.Model
{
    /// <summary>
    ///  Class for testing Dataset
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DatasetTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Dataset
        //private Dataset instance;

        public DatasetTests()
        {
            // TODO uncomment below to create an instance of Dataset
            //instance = new Dataset();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Dataset
        /// </summary>
        [Fact]
        public void DatasetInstanceTest()
        {
            // TODO uncomment below to test "IsType" Dataset
            //Assert.IsType<Dataset>(instance);
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'OwnerId'
        /// </summary>
        [Fact]
        public void OwnerIdTest()
        {
            // TODO unit test for the property 'OwnerId'
        }
        /// <summary>
        /// Test the property 'OrganizationId'
        /// </summary>
        [Fact]
        public void OrganizationIdTest()
        {
            // TODO unit test for the property 'OrganizationId'
        }
        /// <summary>
        /// Test the property 'ParentId'
        /// </summary>
        [Fact]
        public void ParentIdTest()
        {
            // TODO unit test for the property 'ParentId'
        }
        /// <summary>
        /// Test the property 'TwingraphId'
        /// </summary>
        [Fact]
        public void TwingraphIdTest()
        {
            // TODO unit test for the property 'TwingraphId'
        }
        /// <summary>
        /// Test the property 'Main'
        /// </summary>
        [Fact]
        public void MainTest()
        {
            // TODO unit test for the property 'Main'
        }
        /// <summary>
        /// Test the property 'CreationDate'
        /// </summary>
        [Fact]
        public void CreationDateTest()
        {
            // TODO unit test for the property 'CreationDate'
        }
        /// <summary>
        /// Test the property 'RefreshDate'
        /// </summary>
        [Fact]
        public void RefreshDateTest()
        {
            // TODO unit test for the property 'RefreshDate'
        }
        /// <summary>
        /// Test the property 'SourceType'
        /// </summary>
        [Fact]
        public void SourceTypeTest()
        {
            // TODO unit test for the property 'SourceType'
        }
        /// <summary>
        /// Test the property 'Source'
        /// </summary>
        [Fact]
        public void SourceTest()
        {
            // TODO unit test for the property 'Source'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }
        /// <summary>
        /// Test the property 'Queries'
        /// </summary>
        [Fact]
        public void QueriesTest()
        {
            // TODO unit test for the property 'Queries'
        }
        /// <summary>
        /// Test the property 'Tags'
        /// </summary>
        [Fact]
        public void TagsTest()
        {
            // TODO unit test for the property 'Tags'
        }
        /// <summary>
        /// Test the property 'Connector'
        /// </summary>
        [Fact]
        public void ConnectorTest()
        {
            // TODO unit test for the property 'Connector'
        }
        /// <summary>
        /// Test the property 'FragmentsIds'
        /// </summary>
        [Fact]
        public void FragmentsIdsTest()
        {
            // TODO unit test for the property 'FragmentsIds'
        }
        /// <summary>
        /// Test the property 'ValidatorId'
        /// </summary>
        [Fact]
        public void ValidatorIdTest()
        {
            // TODO unit test for the property 'ValidatorId'
        }
        /// <summary>
        /// Test the property 'Compatibility'
        /// </summary>
        [Fact]
        public void CompatibilityTest()
        {
            // TODO unit test for the property 'Compatibility'
        }
        /// <summary>
        /// Test the property 'Security'
        /// </summary>
        [Fact]
        public void SecurityTest()
        {
            // TODO unit test for the property 'Security'
        }

    }

}
