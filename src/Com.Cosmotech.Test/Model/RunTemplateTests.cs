/*
 * Cosmo Tech Platform API
 *
 * Cosmo Tech Platform API
 *
 * The version of the OpenAPI document: 4.0.0-onprem
 * Contact: platform@cosmotech.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Com.Cosmotech.Model;
using Com.Cosmotech.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Com.Cosmotech.Test.Model
{
    /// <summary>
    ///  Class for testing RunTemplate
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class RunTemplateTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for RunTemplate
        //private RunTemplate instance;

        public RunTemplateTests()
        {
            // TODO uncomment below to create an instance of RunTemplate
            //instance = new RunTemplate();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of RunTemplate
        /// </summary>
        [Fact]
        public void RunTemplateInstanceTest()
        {
            // TODO uncomment below to test "IsType" RunTemplate
            //Assert.IsType<RunTemplate>(instance);
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Labels'
        /// </summary>
        [Fact]
        public void LabelsTest()
        {
            // TODO unit test for the property 'Labels'
        }

        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }

        /// <summary>
        /// Test the property 'CsmSimulation'
        /// </summary>
        [Fact]
        public void CsmSimulationTest()
        {
            // TODO unit test for the property 'CsmSimulation'
        }

        /// <summary>
        /// Test the property 'Tags'
        /// </summary>
        [Fact]
        public void TagsTest()
        {
            // TODO unit test for the property 'Tags'
        }

        /// <summary>
        /// Test the property 'ComputeSize'
        /// </summary>
        [Fact]
        public void ComputeSizeTest()
        {
            // TODO unit test for the property 'ComputeSize'
        }

        /// <summary>
        /// Test the property 'RunSizing'
        /// </summary>
        [Fact]
        public void RunSizingTest()
        {
            // TODO unit test for the property 'RunSizing'
        }

        /// <summary>
        /// Test the property 'NoDataIngestionState'
        /// </summary>
        [Fact]
        public void NoDataIngestionStateTest()
        {
            // TODO unit test for the property 'NoDataIngestionState'
        }

        /// <summary>
        /// Test the property 'FetchDatasets'
        /// </summary>
        [Fact]
        public void FetchDatasetsTest()
        {
            // TODO unit test for the property 'FetchDatasets'
        }

        /// <summary>
        /// Test the property 'ScenarioDataDownloadTransform'
        /// </summary>
        [Fact]
        public void ScenarioDataDownloadTransformTest()
        {
            // TODO unit test for the property 'ScenarioDataDownloadTransform'
        }

        /// <summary>
        /// Test the property 'FetchScenarioParameters'
        /// </summary>
        [Fact]
        public void FetchScenarioParametersTest()
        {
            // TODO unit test for the property 'FetchScenarioParameters'
        }

        /// <summary>
        /// Test the property 'ApplyParameters'
        /// </summary>
        [Fact]
        public void ApplyParametersTest()
        {
            // TODO unit test for the property 'ApplyParameters'
        }

        /// <summary>
        /// Test the property 'ValidateData'
        /// </summary>
        [Fact]
        public void ValidateDataTest()
        {
            // TODO unit test for the property 'ValidateData'
        }

        /// <summary>
        /// Test the property 'SendDatasetsToDataWarehouse'
        /// </summary>
        [Fact]
        public void SendDatasetsToDataWarehouseTest()
        {
            // TODO unit test for the property 'SendDatasetsToDataWarehouse'
        }

        /// <summary>
        /// Test the property 'SendInputParametersToDataWarehouse'
        /// </summary>
        [Fact]
        public void SendInputParametersToDataWarehouseTest()
        {
            // TODO unit test for the property 'SendInputParametersToDataWarehouse'
        }

        /// <summary>
        /// Test the property 'PreRun'
        /// </summary>
        [Fact]
        public void PreRunTest()
        {
            // TODO unit test for the property 'PreRun'
        }

        /// <summary>
        /// Test the property 'Run'
        /// </summary>
        [Fact]
        public void RunTest()
        {
            // TODO unit test for the property 'Run'
        }

        /// <summary>
        /// Test the property 'PostRun'
        /// </summary>
        [Fact]
        public void PostRunTest()
        {
            // TODO unit test for the property 'PostRun'
        }

        /// <summary>
        /// Test the property 'ParametersJson'
        /// </summary>
        [Fact]
        public void ParametersJsonTest()
        {
            // TODO unit test for the property 'ParametersJson'
        }

        /// <summary>
        /// Test the property 'ParametersHandlerSource'
        /// </summary>
        [Fact]
        public void ParametersHandlerSourceTest()
        {
            // TODO unit test for the property 'ParametersHandlerSource'
        }

        /// <summary>
        /// Test the property 'DatasetValidatorSource'
        /// </summary>
        [Fact]
        public void DatasetValidatorSourceTest()
        {
            // TODO unit test for the property 'DatasetValidatorSource'
        }

        /// <summary>
        /// Test the property 'PreRunSource'
        /// </summary>
        [Fact]
        public void PreRunSourceTest()
        {
            // TODO unit test for the property 'PreRunSource'
        }

        /// <summary>
        /// Test the property 'RunSource'
        /// </summary>
        [Fact]
        public void RunSourceTest()
        {
            // TODO unit test for the property 'RunSource'
        }

        /// <summary>
        /// Test the property 'PostRunSource'
        /// </summary>
        [Fact]
        public void PostRunSourceTest()
        {
            // TODO unit test for the property 'PostRunSource'
        }

        /// <summary>
        /// Test the property 'ScenariodataTransformSource'
        /// </summary>
        [Fact]
        public void ScenariodataTransformSourceTest()
        {
            // TODO unit test for the property 'ScenariodataTransformSource'
        }

        /// <summary>
        /// Test the property 'ParameterGroups'
        /// </summary>
        [Fact]
        public void ParameterGroupsTest()
        {
            // TODO unit test for the property 'ParameterGroups'
        }

        /// <summary>
        /// Test the property 'StackSteps'
        /// </summary>
        [Fact]
        public void StackStepsTest()
        {
            // TODO unit test for the property 'StackSteps'
        }

        /// <summary>
        /// Test the property 'GitRepositoryUrl'
        /// </summary>
        [Fact]
        public void GitRepositoryUrlTest()
        {
            // TODO unit test for the property 'GitRepositoryUrl'
        }

        /// <summary>
        /// Test the property 'GitBranchName'
        /// </summary>
        [Fact]
        public void GitBranchNameTest()
        {
            // TODO unit test for the property 'GitBranchName'
        }

        /// <summary>
        /// Test the property 'RunTemplateSourceDir'
        /// </summary>
        [Fact]
        public void RunTemplateSourceDirTest()
        {
            // TODO unit test for the property 'RunTemplateSourceDir'
        }

        /// <summary>
        /// Test the property 'OrchestratorType'
        /// </summary>
        [Fact]
        public void OrchestratorTypeTest()
        {
            // TODO unit test for the property 'OrchestratorType'
        }

        /// <summary>
        /// Test the property 'ExecutionTimeout'
        /// </summary>
        [Fact]
        public void ExecutionTimeoutTest()
        {
            // TODO unit test for the property 'ExecutionTimeout'
        }

        /// <summary>
        /// Test the property 'DeleteHistoricalData'
        /// </summary>
        [Fact]
        public void DeleteHistoricalDataTest()
        {
            // TODO unit test for the property 'DeleteHistoricalData'
        }
    }
}
